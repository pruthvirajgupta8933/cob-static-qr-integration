# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
"on":
  push:
    branches:
      - cob-nf-staging

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    # --- FIX APPLIED HERE: NPM_AUTH_TOKEN moved to job level ---
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }} # This pulls the NPM_AUTH_TOKEN from your GitHub repository secrets
      REACT_APP_STAGE_ENC_IV: ${{ secrets.REACT_APP_STAGE_ENC_IV }}
    # --- END FIX ---
    steps:
      - uses: actions/checkout@v2

      # Ensure Node.js is set up for a consistent environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # IMPORTANT: Confirm this matches your project's Node.js version

      # Configure .npmrc with your private registry and token
      - name: Configure npm for private packages
        run: |
          # Using printf for a cleaner .npmrc creation
          # The NPM_AUTH_TOKEN is now available here because it's defined at the job level
          printf "@cto_sabpaisa:registry=https://registry.npmjs.org/\n" > .npmrc
          printf "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}\n" >> .npmrc

      # --- START: Debugging Steps (REMOVE THESE AFTER FIXING) ---
      - name: Debug - Check NPM_AUTH_TOKEN environment variable (should be set and not empty now)
        run: |
          if [ -n "$NPM_AUTH_TOKEN" ]; then
            echo "NPM_AUTH_TOKEN is set and not empty."
          else
            echo "NPM_AUTH_TOKEN is NOT set or is empty."
          fi

      - name: Debug - Display .npmrc content (should be clean now)
        run: cat .npmrc

      - name: Debug - Check npm whoami (should succeed now)
        run: npm whoami

      - name: Debug - Check npm config for registry (should show correct registries)
        run: npm config get registry && npm config get @cto_sabpaisa:registry
      # --- END: Debugging Steps ---

      # This step will now use the .npmrc configuration to install your private package
      - run: npm install --legacy-peer-deps && CI=false npm run build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_COB_NF_DEV }}"
          channelId: live
          projectId: cob-nf-dev
